{"version":3,"sources":["firebase/firebaseConfig.js","redux/actions/uiActions.js","redux/actions/authActions.js","components/helpers/categories.js","redux/actions/gameActions.js","components/screens/TraditionalOptionsScreen.js","components/Question.js","components/helpers/randomizeAnswers.js","components/helpers/fetchQuestions.js","hooks/useFetch.js","components/Loading.js","components/screens/TraditionalMode.js","components/screens/StrikeoutScreen.js","components/screens/StrikeoutGameScreen.js","redux/actions/jeopardyActions.js","components/screens/JeopardyScreen.js","components/helpers/modalCustomStyles.js","components/JeopardyModal.js","components/screens/JeopardyGameScreen.js","components/screens/MainScreen.js","routers/PublicRoute.js","hooks/useForm.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","routers/AuthRouter.js","components/Navbar.js","components/helpers/sortedStats.js","components/UserTopScoreTable.js","components/NotLogged.js","components/screens/UserStatsScreen.js","redux/actions/statsActions.js","components/RecordsTable.js","components/screens/RecordsScreen.js","components/Footer.js","routers/AppRouter.js","redux/reducers/gameReducer.js","redux/reducers/uiReducer.js","redux/reducers/jeopardyReducer.js","redux/reducers/authReducer.js","redux/reducers/statsReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","App.js","index.js","redux/types/types.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","googleAuthProvider","auth","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","startLoading","type","types","uiStartLoading","finishLoading","uiFinishLoading","login","uid","displayName","photoUrl","authLogin","payload","logout","authLogout","startLoadUserStats","dispatch","a","collection","orderBy","get","userStatsSnap","userStats","forEach","game","push","data","loadUserStats","authLoadUserStats","updateUsersCollection","username","doc","update","then","console","log","catch","err","updateProfile","authUpdateProfile","updateProfilePicture","photoURL","authUpdateProfilePicture","categories","value","name","gameSelectedOptions","category","difficulty","amount","mode","active","saveGameResultsToDB","hits","errors","points","gameMode","getState","newRecord","date","Date","now","add","saveGameResultsToGeneralStats","user","userUid","TraditionalOptionsScreen","useDispatch","useState","categoryValue","setCategoryValue","amountValue","setAmountValue","className","htmlFor","id","onChange","e","target","map","key","to","onClick","Question","trivia","idx","getPoints","jeopardy","alreadyAnswered","setAlreadyAnswered","correctResponse","setCorrectResponse","randomAnswers","setRandomAnswers","useEffect","decodedCorrectAnswer","window","atob","correct_answer","decodedIncorrectAnsers","incorrect_answers","incorrect","randomizeResp","correct","allAnswers","sort","randomizeAnswers","handleAnswer","answer","categoryTitle","entertainment","includes","science","substring","getCategoryTitle","question","disabled","role","fetchQuestions","categotyUrl","difficultyUrl","token","localStorage","getItem","checkToken","response_code","generateToken","newToken","setItem","url","fetch","response","json","results","useFetchQuestions","loading","state","setState","Loading","style","marginTop","TraditionalMode","useSelector","logged","history","useHistory","setPoints","setHits","setErrors","toString","replace","length","StrikeoutScreen","difficultyValue","setDifficultyValue","StrikeoutGameScreen","qnum","setQnum","next","setNext","setScore","score","jeopardySetScore","JeopardyScreen","categoryNumbers","categoriesRandomized","i","Math","floor","random","randomizeCategories","jeopardySetRandomCategories","jeopardySetActive","customStyles","content","top","left","right","bottom","marginRight","transform","background","Modal","setAppElement","JeopardyModal","showButtonClose","setShowButtonClose","modalOpen","ui","isOpen","contentLabel","selectedElement","document","getElementById","classList","newScore","uiCloseModal","JeopardyGameScreen","category1","category2","category3","category4","category5","handleSelectQuestion","contains","Swal","fire","jeopardySetTrivia","setTrivia","uiOpenModal","maxWidth","minHeight","height","index","cursor","MainScreen","src","alt","maxHeight","PublicRoute","isLoggedIn","Component","component","rest","props","useForm","initialState","values","setValues","handleInputChange","LoginScreen","email","password","formValues","onSubmit","preventDefault","signInWithEmailAndPassword","message","startLoginEmailPassword","width","placeholder","signInWithPopup","RegisterScreen","errorMessage","setErrorMessage","password1","password2","isFormValid","trim","validator","isEmail","createUserWithEmailAndPassword","startRegisterWithEmailAndPassword","AuthRouter","exact","path","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","flexDirection","signOut","color","sortStats","stats","compare","b","pointsA","pointsB","comparison","UserTopScoreTable","scope","moment","fromNow","NotLogged","UserStatsScreen","file","setFile","setUsername","imageName","setImageName","showChangeProfile","setShowChangeProfile","traditionalStats","filter","topTraditionalStats","slice","strikeoutStats","topStrikeoutStats","jeopardyStats","topJeopardyStats","display","flex","fontSize","textDecoration","aria-describedby","defaultValue","querySelector","click","marginLeft","files","image","currentUser","changeUsername","ref","put","on","snapshot","error","child","getDownloadURL","toUpperCase","statsSetRecords","traditionalRecords","strikeoutRecords","jeopardyRecords","RecordsTable","records","undefined","justifyContent","RecordsScreen","traditionalStatsSnap","strikeoutStatsSnap","jeopardyStatsSnap","traditional","strikeout","traditionalTop","strikeoutTop","jeopardyTop","Footer","class","backgroundColor","href","AppRouter","checking","setChecking","onAuthStateChanged","require","rootReducer","combineReducers","action","gameSaveResults","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.16f62b43.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBZlaVXiDrKnS6XS2qcQuWb4hzgUodyQns\",\r\n  authDomain: \"triviaapp-f19ed.firebaseapp.com\",\r\n  databaseURL: \"https://triviaapp-f19ed.firebaseio.com\",\r\n  projectId: \"triviaapp-f19ed\",\r\n  storageBucket: \"triviaapp-f19ed.appspot.com\",\r\n  messagingSenderId: \"333627830331\",\r\n  appId: \"1:333627830331:web:0d8d24eda94caa010c6c1e\",\r\n  measurementId: \"G-Z58GRMGDQ7\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport { db, googleAuthProvider, facebookAuthProvider, firebase, storage };\r\n","import { types } from \"../types/types\";\r\n\r\nexport const openModal = () => ({\r\n  type: types.uiOpenModal,\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: types.uiCloseModal,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import {\r\n  firebase,\r\n  googleAuthProvider,\r\n  db,\r\n  facebookAuthProvider,\r\n} from \"../../firebase/firebaseConfig\";\r\nimport { types } from \"../types/types\";\r\nimport { startLoading, finishLoading } from \"./uiActions\";\r\nimport Swal from \"sweetalert2\";\r\nimport { storage } from \"../../firebase/firebaseConfig\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Error\", err.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailAndPassword = (\r\n  email,\r\n  password,\r\n  username,\r\n) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: username });\r\n        console.log(user);\r\n        // dispatch(createUserInFirestore(user.uid, username, user.photoURL));\r\n        dispatch(login(user.uid, user.displayName, user.photoURL));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Swal.fire(\"Error\", err.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\n// const createUserInFirestore = (uid, username, photoUrl) => {\r\n//   return async () => {\r\n//     await db.collection(\"users\").add({\r\n//       uid,\r\n//       username,\r\n//       photoUrl,\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        // dispatch(\r\n        //   createUserInFirestore(user.uid, user.displayName, user.photoURL),\r\n        // );\r\n        dispatch(login(user.uid, user.displayName, user.photoURL));\r\n      });\r\n  };\r\n};\r\n\r\nexport const startFacebookLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookAuthProvider)\r\n      .then(({ user }) => {\r\n        // dispatch(\r\n        //   createUserInFirestore(user.uid, user.displayName, user.photoURL),\r\n        // );\r\n        dispatch(login(user.uid, user.displayName, user.photoURL));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName, photoUrl) => ({\r\n  type: types.authLogin,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n    photoUrl,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.authLogout,\r\n});\r\n\r\nexport const startLoadUserStats = (uid) => {\r\n  return async (dispatch) => {\r\n    const userStatsSnap = await db\r\n      .collection(uid)\r\n      .orderBy(\"date\", \"desc\")\r\n      .get();\r\n    const userStats = [];\r\n\r\n    userStatsSnap.forEach((game) => {\r\n      userStats.push(game.data());\r\n    });\r\n\r\n    dispatch(loadUserStats(userStats));\r\n  };\r\n};\r\n\r\nconst loadUserStats = (userStats) => ({\r\n  type: types.authLoadUserStats,\r\n  payload: {\r\n    userStats: userStats,\r\n  },\r\n});\r\n\r\nexport const changeUsername = (username) => {\r\n  return (dispatch) => {\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user.displayName !== username && username.trim() === \"\") {\r\n      Swal.fire(\r\n        \"You can´t be No One\",\r\n        \"You have to choose a username with at least 3 characters\",\r\n        \"error\",\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (user.displayName !== username && username.trim().length < 3) {\r\n      Swal.fire(\r\n        \"You need more letters\",\r\n        \"You have to choose a username with at least 3 characters\",\r\n        \"error\",\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      user.displayName !== username &&\r\n      username !== \"\" &&\r\n      username?.length > 3\r\n    ) {\r\n      dispatch(startLoading());\r\n      user\r\n        .updateProfile({\r\n          displayName: username,\r\n        })\r\n        .then(() => {\r\n          dispatch(finishLoading());\r\n          Swal.fire(\r\n            \"Updated sucessfuly\",\r\n            \"Your username has been updated\",\r\n            \"success\",\r\n          );\r\n\r\n          dispatch(updateProfile(username));\r\n          dispatch(updateUsersCollection(user.uid, username, user.photoURL));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(finishLoading());\r\n          Swal.fire(\"Error\", err, \"error\");\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const changePhoto = (image) => {\r\n  return (dispatch) => {\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (image !== null) {\r\n      dispatch(startLoading());\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"images\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              user\r\n                .updateProfile({\r\n                  photoURL: url,\r\n                })\r\n                .then(() => {\r\n                  dispatch(finishLoading());\r\n                  Swal.fire(\r\n                    \"Updated sucessfuly\",\r\n                    \"Your profile picture has been updated\",\r\n                    \"success\",\r\n                  );\r\n\r\n                  dispatch(updateProfilePicture(url));\r\n                  dispatch(\r\n                    updateUsersCollection(user.uid, user.displayName, url),\r\n                  );\r\n                })\r\n                .catch((err) => {\r\n                  dispatch(finishLoading());\r\n                  Swal.fire(\"Error\", err, \"error\");\r\n                });\r\n            });\r\n        },\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst updateUsersCollection = (uid, username, photoUrl) => {\r\n  return () => {\r\n    db.collection(\"users\")\r\n      .doc(`${uid}`)\r\n      .update({\r\n        uid,\r\n        username,\r\n        photoUrl,\r\n      })\r\n      .then(() => {\r\n        console.log(\"User Updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst updateProfile = (username) => ({\r\n  type: types.authUpdateProfile,\r\n  payload: {\r\n    username,\r\n  },\r\n});\r\n\r\nconst updateProfilePicture = (photoURL) => ({\r\n  type: types.authUpdateProfilePicture,\r\n  payload: {\r\n    photoURL,\r\n  },\r\n});\r\n","export const categories = [\r\n  { value: \"0\", name: \"All\" }, // SI\r\n  { value: \"9\", name: \"General Knowledge\" }, //SI\r\n  { value: \"10\", name: \"Books\" }, // SOLO ALL\r\n  { value: \"11\", name: \"Film\" }, //SI\r\n  { value: \"12\", name: \"Music\" }, //SI\r\n  { value: \"13\", name: \"Musicals & Theatres\" }, //NO - 25\r\n  { value: \"14\", name: \"Television\" }, //SOLO ALL (hard no)\r\n  { value: \"15\", name: \"Vvalueeo Games\" }, //SI\r\n  { value: \"16\", name: \"Board Games\" }, // SOLO ALL\r\n  { value: \"17\", name: \"Science & Nature\" }, //SI\r\n  { value: \"18\", name: \"Computers\" }, // SOLO ALL\r\n  { value: \"19\", name: \"Mathematics\" }, //NO - 46\r\n  { value: \"20\", name: \"Mythology\" }, //SOLO ALL\r\n  { value: \"21\", name: \"Sports\" }, //SOLO ALL\r\n  { value: \"22\", name: \"Geography\" }, //SI\r\n  { value: \"23\", name: \"History\" }, //SI\r\n  { value: \"24\", name: \"Politics\" }, //SOLO ALL\r\n  { value: \"25\", name: \"Art\" }, //NO - 27\r\n  { value: \"26\", name: \"Celebrities\" }, //NO - 48\r\n  { value: \"27\", name: \"Animals\" }, //SOLO ALL\r\n  { value: \"28\", name: \"Vehicles\" }, //SOLO ALL\r\n  { value: \"29\", name: \"Comics\" }, //NO - 46\r\n  { value: \"30\", name: \"Gadgets\" }, //NO - 22\r\n  { value: \"31\", name: \"Japanese Anime & Manga\" }, //SOLO ALL (hard no)\r\n  { value: \"32\", name: \"Cartoon & Animations\" }, //SOLO ALL\r\n];\r\n","import { types } from \"../types/types\";\r\nimport { db } from \"../../firebase/firebaseConfig\";\r\n\r\nexport const gameSelectedOptions = (\r\n  category,\r\n  difficulty,\r\n  amount,\r\n  mode,\r\n  active,\r\n) => ({\r\n  type: types.gameSelectedOptions,\r\n  payload: {\r\n    category,\r\n    difficulty,\r\n    amount,\r\n    mode,\r\n    active,\r\n  },\r\n});\r\n\r\nexport const gameSaveResults = (hits, errors, points) => ({\r\n  type: types.gameSaveResults,\r\n  payload: {\r\n    hits,\r\n    errors,\r\n    points,\r\n  },\r\n});\r\n\r\nexport const saveGameResultsToDB = (hits, errors, points, gameMode) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n\r\n    const newRecord = {\r\n      hits,\r\n      errors,\r\n      points,\r\n      gameMode,\r\n      date: Date.now(),\r\n    };\r\n\r\n    const doc = await db.collection(uid).add(newRecord);\r\n    console.log(doc);\r\n  };\r\n};\r\n\r\nexport const saveGameResultsToGeneralStats = (\r\n  hits,\r\n  errors,\r\n  points,\r\n  gameMode,\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    const user = getState().auth;\r\n\r\n    const newRecord = {\r\n      userUid: user.uid,\r\n      username: user.name,\r\n      photoUrl: user.photoUrl,\r\n      hits,\r\n      errors,\r\n      points,\r\n      date: Date.now(),\r\n    };\r\n\r\n    const doc = await db.collection(gameMode).add(newRecord);\r\n    console.log(doc);\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { categories } from \"../helpers/categories\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { gameSelectedOptions } from \"../../redux/actions/gameActions\";\r\n\r\nconst TraditionalOptionsScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [amountValue, setAmountValue] = useState(\"10\");\r\n\r\n  const handleCategoryValueChange = (e) => {\r\n    console.log(e.target.value);\r\n    setCategoryValue(e.target.value);\r\n  };\r\n\r\n  const handleAmountValueChange = (e) => {\r\n    console.log(e.target.value);\r\n    setAmountValue(e.target.value);\r\n  };\r\n\r\n  const handleSelectedOptions = () => {\r\n    dispatch(\r\n      gameSelectedOptions(\r\n        categoryValue,\r\n        \"all\",\r\n        amountValue,\r\n        \"traditional\",\r\n        true,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='row justify-content-center mt-2'>\r\n        <div className='col-sm-10 col-lg-8'>\r\n          <div className='jumbotron'>\r\n            <div className='container'>\r\n              <h1>Traditional Mode</h1>\r\n              <h5 className='display-6 mt-5'>How to Play</h5>\r\n              <p className='lead text-justify'>\r\n                The traditional mode is a trivia where you must answer 10, 15 or\r\n                20 questions according to your selections. You can select the\r\n                category (or all of them). The questions have different\r\n                difficulties and give points according to the following table:\r\n              </p>\r\n              <p>\r\n                <span className='badge badge-success mr-3'>EASY</span> 1 Point\r\n              </p>\r\n              <p>\r\n                <span className='badge badge-warning mr-3'>NORMAL</span>3 Points\r\n              </p>\r\n              <p>\r\n                <span className='badge badge-danger mr-3'>HARD</span>5 Points\r\n              </p>\r\n\r\n              <p className='lead mt-5'>Good Luck!</p>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-6'>\r\n                  <div className='input-group mb-3'>\r\n                    <div className='input-group-prepend'>\r\n                      <label\r\n                        className='input-group-text'\r\n                        htmlFor='inputGroupSelect01'>\r\n                        Select Category\r\n                      </label>\r\n                    </div>\r\n                    <select\r\n                      value={categoryValue}\r\n                      className='custom-select'\r\n                      id='inputGroupSelect01'\r\n                      onChange={handleCategoryValueChange}>\r\n                      {categories.map((category) => (\r\n                        <option key={category.value} value={category.value}>\r\n                          {category.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-6'>\r\n                  <div className='input-group mb-3'>\r\n                    <div className='input-group-prepend'>\r\n                      <label\r\n                        className='input-group-text'\r\n                        htmlFor='inputGroupSelect01'>\r\n                        Questions Amount\r\n                      </label>\r\n                    </div>\r\n                    <select\r\n                      value={amountValue}\r\n                      className='custom-select'\r\n                      id='inputGroupSelect01'\r\n                      onChange={handleAmountValueChange}>\r\n                      <option value='10'>10</option>\r\n                      <option value='15'>15</option>\r\n                      <option value='20'>20</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-6'>\r\n                  <Link\r\n                    to='traditional/game'\r\n                    className='btn btn-block btn-primary'\r\n                    onClick={handleSelectedOptions}>\r\n                    Start Game\r\n                  </Link>\r\n\r\n                  <Link to='/' className='btn btn-block btn-secondary'>\r\n                    Main Menu\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TraditionalOptionsScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { randomizeAnswers } from \"./helpers/randomizeAnswers\";\r\n\r\nconst Question = ({ trivia, idx, getPoints, value, jeopardy }) => {\r\n  const [alreadyAnswered, setAlreadyAnswered] = useState(false);\r\n  const [correctResponse, setCorrectResponse] = useState(0);\r\n  const [randomAnswers, setRandomAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAlreadyAnswered(false);\r\n    setCorrectResponse(0);\r\n  }, [idx]);\r\n\r\n  useEffect(() => {\r\n    const decodedCorrectAnswer = window.atob(trivia.correct_answer);\r\n    const decodedIncorrectAnsers = [];\r\n\r\n    trivia.incorrect_answers.forEach((incorrect) => {\r\n      decodedIncorrectAnsers.push(window.atob(incorrect));\r\n    });\r\n\r\n    const randomizeResp = randomizeAnswers(\r\n      decodedCorrectAnswer,\r\n      decodedIncorrectAnsers,\r\n    );\r\n\r\n    setRandomAnswers(randomizeResp);\r\n  }, [trivia.correct_answer, trivia.incorrect_answers]);\r\n\r\n  const handleAnswer = (answer) => {\r\n    if (answer === window.atob(trivia.correct_answer)) {\r\n      setCorrectResponse(1);\r\n      getPoints(true, window.atob(trivia.difficulty), value);\r\n    } else {\r\n      setCorrectResponse(2);\r\n      getPoints(false, window.atob(trivia.difficulty), value);\r\n    }\r\n\r\n    setAlreadyAnswered(true);\r\n  };\r\n\r\n  const getCategoryTitle = (category) => {\r\n    let categoryTitle = category;\r\n    const entertainment = category.includes(\"Entertainment:\");\r\n    const science = category.includes(\"Science:\");\r\n\r\n    if (entertainment) {\r\n      categoryTitle = category.substring(15, 50);\r\n    }\r\n\r\n    if (science) {\r\n      categoryTitle = category.substring(9, 50);\r\n    }\r\n\r\n    return categoryTitle;\r\n  };\r\n\r\n  return (\r\n    <div className='col-sm-12 col-lg-12 mb-5 justify-content-center'>\r\n      <div className='card'>\r\n        <div className='card-body '>\r\n          <h5 className='card-title'>\r\n            {\" \"}\r\n            {jeopardy\r\n              ? `${getCategoryTitle(window.atob(trivia.category))} ${idx}`\r\n              : `Question ${idx}`}{\" \"}\r\n          </h5>\r\n          <p className='card-text'>{window.atob(trivia.question)}</p>\r\n\r\n          {window.atob(trivia.difficulty) === \"easy\" && !jeopardy && (\r\n            <span className='badge badge-success'>EASY</span>\r\n          )}\r\n          {window.atob(trivia.difficulty) === \"medium\" && !jeopardy && (\r\n            <span className='badge badge-warning'>NORMAL</span>\r\n          )}\r\n          {window.atob(trivia.difficulty) === \"hard\" && !jeopardy && (\r\n            <span className='badge badge-danger'>HARD</span>\r\n          )}\r\n        </div>\r\n\r\n        <ul className='list-group list-group-flush'>\r\n          <li className='list-group-item'>\r\n            <button\r\n              className={\r\n                randomAnswers[0] === window.atob(trivia.correct_answer) &&\r\n                alreadyAnswered\r\n                  ? \"btn btn-success\"\r\n                  : \"btn btn-primary\"\r\n              }\r\n              disabled={alreadyAnswered}\r\n              onClick={(e) => handleAnswer(randomAnswers[0])}>\r\n              {randomAnswers[0]}\r\n            </button>\r\n          </li>\r\n          <li className='list-group-item'>\r\n            <button\r\n              className={\r\n                randomAnswers[1] === window.atob(trivia.correct_answer) &&\r\n                alreadyAnswered\r\n                  ? \"btn btn-success\"\r\n                  : \"btn btn-primary\"\r\n              }\r\n              disabled={alreadyAnswered}\r\n              onClick={() => handleAnswer(randomAnswers[1])}>\r\n              {randomAnswers[1]}\r\n            </button>\r\n          </li>\r\n          <li className='list-group-item'>\r\n            <button\r\n              className={\r\n                randomAnswers[2] === window.atob(trivia.correct_answer) &&\r\n                alreadyAnswered\r\n                  ? \"btn btn-success\"\r\n                  : \"btn btn-primary\"\r\n              }\r\n              disabled={alreadyAnswered}\r\n              onClick={() => handleAnswer(randomAnswers[2])}>\r\n              {randomAnswers[2]}\r\n            </button>\r\n          </li>\r\n          <li className='list-group-item'>\r\n            <button\r\n              className={\r\n                randomAnswers[3] === window.atob(trivia.correct_answer) &&\r\n                alreadyAnswered\r\n                  ? \"btn btn-success\"\r\n                  : \"btn btn-primary\"\r\n              }\r\n              disabled={alreadyAnswered}\r\n              onClick={() => handleAnswer(randomAnswers[3])}>\r\n              {randomAnswers[3]}\r\n            </button>\r\n          </li>\r\n          {correctResponse === 1 && (\r\n            <li className='list-group-item'>\r\n              <div className='alert alert-success' role='alert'>\r\n                Correct Answer\r\n              </div>\r\n            </li>\r\n          )}\r\n          {correctResponse === 2 && (\r\n            <li className='list-group-item'>\r\n              <div className='alert alert-danger' role='alert'>\r\n                Wrong Answer\r\n              </div>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","export const randomizeAnswers = (correct, incorrect) => {\r\n  let allAnswers = [];\r\n  allAnswers = incorrect;\r\n  allAnswers.push(correct);\r\n  return allAnswers.sort();\r\n};\r\n\r\nexport const randomizeCategories = () => {\r\n  let categoriesRandomized = [];\r\n\r\n  for (let i = 0; categoriesRandomized.length < 5; i++) {\r\n    let category = (Math.floor(Math.random() * 24) + 9).toString();\r\n\r\n    if (!categoriesRandomized.includes(category)) {\r\n      categoriesRandomized.push(category.toString());\r\n    }\r\n  }\r\n\r\n  return categoriesRandomized;\r\n};\r\n","export const fetchQuestions = async (amount, difficulty, category) => {\r\n  let categotyUrl = \"\";\r\n  let difficultyUrl = \"\";\r\n\r\n  // Token Logic\r\n\r\n  let token = localStorage.getItem(\"token\");\r\n  const response_code = await checkToken(token);\r\n\r\n  if (response_code === 3 || response_code === 4) {\r\n    const newToken = await generateToken();\r\n    localStorage.setItem(\"token\", newToken);\r\n    token = newToken;\r\n  }\r\n\r\n  // Token Logic\r\n\r\n  if (category !== \"\") {\r\n    categotyUrl = `&category=${category}`;\r\n  }\r\n\r\n  if (difficulty !== \"all\") {\r\n    difficultyUrl = `&difficulty=${difficulty}`;\r\n  }\r\n\r\n  const url = `https://opentdb.com/api.php?amount=${amount}${categotyUrl}${difficultyUrl}&type=multiple&encode=base64&token=${token}`;\r\n\r\n  const response = await fetch(url);\r\n  const { results } = await response.json();\r\n\r\n  return results;\r\n};\r\n\r\nconst generateToken = async () => {\r\n  const url = \"https://opentdb.com/api_token.php?command=request\";\r\n\r\n  const response = await fetch(url);\r\n  const { token } = await response.json();\r\n\r\n  return token;\r\n};\r\n\r\nconst checkToken = async (token) => {\r\n  const url = `https://opentdb.com/api.php?amount=10&token=${token}`;\r\n\r\n  const response = await fetch(url);\r\n  const { response_code } = await response.json();\r\n\r\n  return response_code;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { fetchQuestions } from \"../components/helpers/fetchQuestions\";\r\n\r\nexport const useFetchQuestions = (amount, difficulty, category) => {\r\n  const [state, setState] = useState({\r\n    results: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchQuestions(amount, difficulty, category).then((results) =>\r\n      setState({\r\n        results: results,\r\n        loading: false,\r\n      }),\r\n    );\r\n  }, [amount, difficulty, category]);\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div style={{ marginTop: \"200px\" }}>\r\n      <div className='d-flex justify-content-center align-items-center'>\r\n        <div className='spinner-border' role='status'>\r\n          <span className='sr-only'>Loading</span>\r\n        </div>\r\n      </div>\r\n      <p className='mt-2'>Wait for it...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\nimport Question from \"../Question\";\r\nimport { useFetchQuestions } from \"../../hooks/useFetch\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  saveGameResultsToDB,\r\n  saveGameResultsToGeneralStats,\r\n} from \"../../redux/actions/gameActions\";\r\nimport { useEffect } from \"react\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst TraditionalMode = () => {\r\n  const { amount, difficulty, category, active } = useSelector(\r\n    (state) => state.game,\r\n  );\r\n  const { logged } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  console.log(amount, difficulty, category);\r\n  const { results } = useFetchQuestions(\r\n    amount,\r\n    difficulty,\r\n    category,\r\n    \"traditional\",\r\n  );\r\n  const [points, setPoints] = useState(0);\r\n  const [hits, setHits] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if ((hits + errors).toString() === amount && logged) {\r\n      dispatch(saveGameResultsToDB(hits, errors, points, \"traditional\"));\r\n      dispatch(\r\n        saveGameResultsToGeneralStats(hits, errors, points, \"traditional-mode\"),\r\n      );\r\n    }\r\n  }, [hits, errors, points, amount, dispatch, logged]);\r\n\r\n  const getPoints = (correct, difficulty) => {\r\n    if (correct) {\r\n      setHits(hits + 1);\r\n\r\n      switch (difficulty) {\r\n        case \"easy\":\r\n          setPoints(points + 1);\r\n          break;\r\n        case \"medium\":\r\n          setPoints(points + 3);\r\n          break;\r\n        case \"hard\":\r\n          setPoints(points + 5);\r\n          break;\r\n\r\n        default:\r\n          setPoints(points + 1);\r\n      }\r\n    } else {\r\n      setErrors(errors + 1);\r\n    }\r\n  };\r\n\r\n  if (!active) {\r\n    history.replace(\"/traditional\");\r\n  }\r\n\r\n  if (results.length === 0) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>Traditional Trivia</h1>\r\n      <div className='row'>\r\n        {results.map((trivia, idx) => (\r\n          <div key={trivia.question} className='col-sm-12 col-lg-6'>\r\n            <Question\r\n              trivia={trivia}\r\n              idx={idx + 1}\r\n              getPoints={getPoints}\r\n              jeopardy={false}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(hits + errors).toString() === amount && (\r\n        <div className='row justify-content-md-center mb-5'>\r\n          <div className='col-sm-12 col-lg-6'>\r\n            {/* Aqui va el card de ganaste la partida */}\r\n            <div className='card'>\r\n              <div className='card-header'>Thanks for playing!</div>\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>Your Results:</h5>\r\n                <p className='card-text'> Correct Anwsers: {hits} </p>\r\n                <p className='card-text'> Incorrect Anwsers: {errors} </p>\r\n                <b>\r\n                  <h6 className='card-text'> Total Points: {points} </h6>\r\n                </b>\r\n\r\n                <Link to='/traditional' className='btn btn-primary mt-5'>\r\n                  Play Again\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TraditionalMode;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { gameSelectedOptions } from \"../../redux/actions/gameActions\";\r\n\r\nconst StrikeoutScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [difficultyValue, setDifficultyValue] = useState(\"easy\");\r\n\r\n  const handleDifficultyValueChange = (e) => {\r\n    console.log(e.target.value);\r\n    setDifficultyValue(e.target.value);\r\n  };\r\n\r\n  const handleSelectedOptions = () => {\r\n    dispatch(gameSelectedOptions(\"\", difficultyValue, \"50\", \"strikeout\", true));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='row justify-content-center mt-2'>\r\n        <div className='col-sm-10 col-lg-8'>\r\n          <div className='jumbotron'>\r\n            <div className='container'>\r\n              <h1>Strikeout Mode</h1>\r\n              <h5 className='display-6 mt-5'>How to Play</h5>\r\n              <p className='lead text-justify'>\r\n                In Strikeout mode, answer as many questions as you can before\r\n                making 3 errors (outs). The maximum number of questions to\r\n                answer is 50, will you be able to reach the end? The questions\r\n                have different difficulties and a value according to the\r\n                following table:\r\n              </p>\r\n              <p>\r\n                <span className='badge badge-success mr-3'>EASY</span> 1 Point\r\n              </p>\r\n              <p>\r\n                <span className='badge badge-warning mr-3'>NORMAL</span>3 Points\r\n              </p>\r\n              <p>\r\n                <span className='badge badge-danger mr-3'>HARD</span>5 Points\r\n              </p>\r\n\r\n              <p className='lead mt-5'>Good Luck!</p>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-sm-6'>\r\n                  <div className='input-group mb-3'>\r\n                    <div className='input-group-prepend'>\r\n                      <label\r\n                        className='input-group-text'\r\n                        htmlFor='inputGroupSelect01'>\r\n                        Select Difficulty\r\n                      </label>\r\n                    </div>\r\n                    <select\r\n                      value={difficultyValue}\r\n                      className='custom-select'\r\n                      id='inputGroupSelect01'\r\n                      onChange={handleDifficultyValueChange}>\r\n                      <option value='easy'>Easy</option>\r\n                      <option value='medium'>Normal</option>\r\n                      <option value='hard'>Hard</option>\r\n                      <option value='all'>All</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-6'>\r\n                  <Link\r\n                    to='strikeout/game'\r\n                    className='btn btn-block btn-primary'\r\n                    onClick={handleSelectedOptions}>\r\n                    Start Game\r\n                  </Link>\r\n\r\n                  <Link to='/' className='btn btn-block btn-secondary'>\r\n                    Main Menu\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StrikeoutScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFetchQuestions } from \"../../hooks/useFetch\";\r\nimport Question from \"../Question\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  saveGameResultsToDB,\r\n  saveGameResultsToGeneralStats,\r\n} from \"../../redux/actions/gameActions\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst StrikeoutGameScreen = () => {\r\n  const { category, difficulty, amount, active } = useSelector(\r\n    (state) => state.game,\r\n  );\r\n  const { logged } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  console.log(category, difficulty, amount);\r\n\r\n  const { results } = useFetchQuestions(amount, difficulty, category);\r\n\r\n  const [points, setPoints] = useState(0);\r\n  const [errors, setErrors] = useState(0);\r\n  const [hits, setHits] = useState(0);\r\n  const [qnum, setQnum] = useState(0);\r\n  const [next, setNext] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if ((errors === 3 || qnum >= amount) && logged) {\r\n      dispatch(saveGameResultsToDB(hits, errors, points, \"strikeout\"));\r\n      dispatch(\r\n        saveGameResultsToGeneralStats(hits, errors, points, \"strikeout-mode\"),\r\n      );\r\n    }\r\n  }, [hits, errors, points, qnum, amount, dispatch, logged]);\r\n\r\n  const getPoints = (correct, difficulty) => {\r\n    if (correct) {\r\n      setHits(hits + 1);\r\n\r\n      switch (difficulty) {\r\n        case \"easy\":\r\n          setPoints(points + 1);\r\n          break;\r\n        case \"medium\":\r\n          setPoints(points + 3);\r\n          break;\r\n        case \"hard\":\r\n          setPoints(points + 5);\r\n          break;\r\n\r\n        default:\r\n          setPoints(points + 1);\r\n      }\r\n    } else {\r\n      setErrors(errors + 1);\r\n    }\r\n\r\n    setNext(false);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setQnum(qnum + 1);\r\n    setNext(true);\r\n  };\r\n\r\n  if (!active) {\r\n    history.replace(\"/strikeout\");\r\n  }\r\n\r\n  if (results.length === 0) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row justify-content-center mt-3'>\r\n        {qnum >= amount && (\r\n          <div className='col-sm-10 col-lg-6'>\r\n            {/* Aqui va el card de ganaste la partida */}\r\n            <div className='card'>\r\n              <div className='card-header'>\r\n                You have reached the end of the 50 questions\r\n              </div>\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>You win with {points} points</h5>\r\n                <p className='card-text'>\r\n                  Thanks for playing! If you wish to give it another try, click\r\n                  de button below.\r\n                </p>\r\n                <Link to='/strikeout' className='btn btn-primary'>\r\n                  Play Again\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {errors === 3 && (\r\n          <div className='col-sm-10 col-lg-6 '>\r\n            <div className='card'>\r\n              <div className='card-header'>\r\n                You managed to reach question {qnum + 1}. Keep trying!\r\n              </div>\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>You obtained {points} points.</h5>\r\n                <p className='card-text'>\r\n                  Thanks for playing! If you wish to give it another try, click\r\n                  de button below.\r\n                </p>\r\n                <Link to='/strikeout' className='btn btn-primary'>\r\n                  Play Again\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {qnum < amount && errors < 3 && (\r\n          <div className='col-sm-12 col-lg-6'>\r\n            <Question\r\n              trivia={results[qnum]}\r\n              idx={qnum + 1}\r\n              getPoints={getPoints}\r\n              jeopardy={false}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {qnum < amount && errors < 3 && (\r\n        <div className='row justify-content-center'>\r\n          <div className='col-sm-10 col-lg-6'>\r\n            <button\r\n              className='btn btn-info'\r\n              disabled={next}\r\n              onClick={handleNextQuestion}>\r\n              {qnum === amount - 1 ? \"Results\" : \"Next Question\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className='row justify-content-center mt-5 mb-5'>\r\n        <div className='col-sm-6 col-lg-4'>\r\n          <div className='card'>\r\n            <div className='card-body out-container'>\r\n              <div className={errors < 1 ? \"out-placeholder\" : \"out\"}>1</div>\r\n              <div className={errors < 2 ? \"out-placeholder\" : \"out\"}>2</div>\r\n              <div className={errors < 3 ? \"out-placeholder\" : \"out\"}>3</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StrikeoutGameScreen;\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setTrivia = (trivia, idx) => ({\r\n  type: types.jeopardySetTrivia,\r\n  payload: {\r\n    trivia: trivia,\r\n    idx: idx,\r\n  },\r\n});\r\n\r\nexport const setScore = (score) => ({\r\n  type: types.jeopardySetScore,\r\n  payload: {\r\n    score,\r\n  },\r\n});\r\n\r\nexport const setRandomCategories = (categories) => ({\r\n  type: types.jeopardySetRandomCategories,\r\n  payload: {\r\n    categories,\r\n  },\r\n});\r\n\r\nexport const setActive = (active) => ({\r\n  type: types.jeopardySetActive,\r\n  payload: {\r\n    active,\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { randomizeCategories } from \"../helpers/randomizeAnswers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setRandomCategories,\r\n  setScore,\r\n  setActive,\r\n} from \"../../redux/actions/jeopardyActions\";\r\n\r\nconst JeopardyScreen = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const categoryNumbers = randomizeCategories();\r\n    dispatch(setRandomCategories(categoryNumbers));\r\n    dispatch(setActive(true));\r\n    dispatch(\r\n      setScore({\r\n        hits: 0,\r\n        errors: 0,\r\n        points: 0,\r\n      }),\r\n    );\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='row justify-content-center mt-2'>\r\n        <div className='col-sm-10 col-lg-8'>\r\n          <div className='jumbotron'>\r\n            <div className='container'>\r\n              <h1>Jeopardy Mode</h1>\r\n              <h5 className='display-6 mt-5'>How to Play</h5>\r\n              <p className='lead text-justify'>\r\n                In jeopardy mode you will have a selection of 5 topics with 5\r\n                questions per topic. Each question has a value of 100 to 500. If\r\n                you answer correctly you earn the indicated points, otherwise\r\n                you lose that same amount. Try to get the maximum amount of\r\n                points.\r\n              </p>\r\n\r\n              <p className='lead mt-5'>Good Luck!</p>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-sm-4'>\r\n                  <div className='input-group mb-3'></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row justify-content-center'>\r\n                <div className='col-6'>\r\n                  <Link\r\n                    to='jeopardy/game'\r\n                    className='btn btn-block btn-primary'>\r\n                    Start Game\r\n                  </Link>\r\n\r\n                  <Link to='/' className='btn btn-block btn-secondary'>\r\n                    Main Menu\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JeopardyScreen;\r\n","export const customStyles = {\r\n  content: {\r\n    top: \"50vh\",\r\n    left: \"50vw\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    background: \"rgba(0, 0, 0, 0.7)\",\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./modalStyle.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeModal } from \"../redux/actions/uiActions\";\r\nimport { customStyles } from \"../components/helpers/modalCustomStyles\";\r\nimport Question from \"./Question\";\r\nimport { setScore } from \"../redux/actions/jeopardyActions\";\r\nimport \"./modalStyle.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst JeopardyModal = () => {\r\n  const dispatch = useDispatch();\r\n  const [showButtonClose, setShowButtonClose] = useState(false);\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { trivia, idx, score } = useSelector((state) => state.jeopardy);\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch(closeModal());\r\n    setShowButtonClose(false);\r\n  };\r\n\r\n  const getPoints = (correct, difficulty, value) => {\r\n    let hits = score.hits;\r\n    let errors = score.errors;\r\n    let points = score.points;\r\n    let selectedElement = document.getElementById(trivia.question);\r\n\r\n    if (correct) {\r\n      hits = hits + 1;\r\n      points = points + value;\r\n      selectedElement.classList.replace(\"bg-primary\", \"bg-success\");\r\n    } else {\r\n      errors = errors + 1;\r\n      points = points - value;\r\n      selectedElement.classList.replace(\"bg-primary\", \"bg-danger\");\r\n    }\r\n\r\n    const newScore = {\r\n      hits,\r\n      errors,\r\n      points,\r\n    };\r\n\r\n    setShowButtonClose(true);\r\n    dispatch(setScore(newScore));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      // onRequestClose={handleCloseModal}\r\n      style={customStyles}\r\n      contentLabel='Example Modal'>\r\n      <div className='row justify-content-center'>\r\n        <div className='col-12'>\r\n          <Question\r\n            trivia={trivia}\r\n            idx={` x ${(idx + 1) * 100}`}\r\n            getPoints={getPoints}\r\n            value={(idx + 1) * 100}\r\n            jeopardy={true}\r\n          />\r\n        </div>\r\n        {showButtonClose && (\r\n          <button className='btn btn-warning' onClick={handleCloseModal}>\r\n            Next Question\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default JeopardyModal;\r\n","import React from \"react\";\r\nimport { useFetchQuestions } from \"../../hooks/useFetch\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { openModal } from \"../../redux/actions/uiActions\";\r\nimport JeopardyModal from \"../JeopardyModal\";\r\nimport { setTrivia } from \"../../redux/actions/jeopardyActions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  saveGameResultsToDB,\r\n  saveGameResultsToGeneralStats,\r\n} from \"../../redux/actions/gameActions\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst JeopardyGameScreen = () => {\r\n  const { categories } = useSelector((state) => state.jeopardy);\r\n  const { name, logged } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const { score, active } = useSelector((state) => state.jeopardy);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (score.hits + score.errors === 25 && logged) {\r\n      dispatch(\r\n        saveGameResultsToDB(score.hits, score.errors, score.points, \"jeopardy\"),\r\n      );\r\n      dispatch(\r\n        saveGameResultsToGeneralStats(\r\n          score.hits,\r\n          score.errors,\r\n          score.points,\r\n          \"jeopardy-mode\",\r\n        ),\r\n      );\r\n    }\r\n  }, [score, dispatch, logged]);\r\n\r\n  if (!active) {\r\n    history.replace(\"/jeopardy\");\r\n  }\r\n\r\n  const { results: category1 } = useFetchQuestions(\"5\", \"all\", categories[0]);\r\n  const { results: category2 } = useFetchQuestions(\"5\", \"all\", categories[1]);\r\n  const { results: category3 } = useFetchQuestions(\"5\", \"all\", categories[2]);\r\n  const { results: category4 } = useFetchQuestions(\"5\", \"all\", categories[3]);\r\n  const { results: category5 } = useFetchQuestions(\"5\", \"all\", categories[4]);\r\n\r\n  console.log(score);\r\n\r\n  console.log(category1);\r\n\r\n  const handleSelectQuestion = (trivia, idx) => {\r\n    let selectedElement = document.getElementById(trivia.question);\r\n\r\n    if (selectedElement.classList.contains(\"alreadyAnswered\")) {\r\n      Swal.fire(\r\n        \"Already Answered\",\r\n        \"You already answer this question\",\r\n        \"warning\",\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(setTrivia(trivia, idx));\r\n    dispatch(openModal());\r\n    selectedElement.classList.add(\"alreadyAnswered\");\r\n  };\r\n\r\n  const getCategoryTitle = (category) => {\r\n    let categoryTitle = category;\r\n    const entertainment = category.includes(\"Entertainment:\");\r\n    const science = category.includes(\"Science:\");\r\n\r\n    if (entertainment) {\r\n      categoryTitle = category.substring(15, 50);\r\n    }\r\n\r\n    if (science) {\r\n      categoryTitle = category.substring(9, 50);\r\n    }\r\n\r\n    return categoryTitle;\r\n  };\r\n\r\n  if (\r\n    category1.length === 0 ||\r\n    category2.length === 0 ||\r\n    category3.length === 0 ||\r\n    category4.length === 0 ||\r\n    category5.length === 0\r\n  ) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='container'>\r\n        <div className='row justify-content-center mt-5'>\r\n          <div className='col-lg-2 col-sm-4 col-4'>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            <div\r\n              className='card bg-warning mb-3'\r\n              style={{ maxWidth: \"18rem\", minHeight: \"50px\" }}>\r\n              <div className='card-category' style={{ height: \"80px\" }}>\r\n                <h5 className='text-wrap'>\r\n                  {getCategoryTitle(window.atob(category1[0].category))}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            {/* Aqui las pruebas para el card del título */}\r\n\r\n            {category1.map((question, index) => (\r\n              <div\r\n                key={question.question}\r\n                id={question.question}\r\n                className='card bg-primary mb-3 '\r\n                onClick={() => handleSelectQuestion(question, index)}\r\n                style={{ maxWidth: \"18rem\" }}>\r\n                <div\r\n                  className='card-body'\r\n                  style={{ cursor: \"pointer\", height: \"60px\" }}>\r\n                  <h6 className='card-title'>{100 * (index + 1)}</h6>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className='col-lg-2 col-sm-4 col-4'>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            <div className='card bg-warning mb-3' style={{ maxWidth: \"18rem\" }}>\r\n              <div className='card-category' style={{ height: \"80px\" }}>\r\n                <h5 className='text-wrap'>\r\n                  {getCategoryTitle(window.atob(category2[0].category))}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            {category2.map((question, index) => (\r\n              <div\r\n                key={question.question}\r\n                id={question.question}\r\n                className='card bg-primary mb-3 '\r\n                onClick={() => handleSelectQuestion(question, index)}\r\n                style={{ maxWidth: \"18rem\" }}>\r\n                <div\r\n                  className='card-body'\r\n                  style={{ cursor: \"pointer\", height: \"60px\" }}>\r\n                  <h6 className='card-title'>{100 * (index + 1)}</h6>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className='col-lg-2 col-sm-4 col-4'>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            <div className='card bg-warning mb-3' style={{ maxWidth: \"18rem\" }}>\r\n              <div className='card-category' style={{ height: \"80px\" }}>\r\n                <h5 className='text-wrap'>\r\n                  {getCategoryTitle(window.atob(category3[0].category))}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            {category3.map((question, index) => (\r\n              <div\r\n                key={question.question}\r\n                id={question.question}\r\n                className='card bg-primary mb-3 '\r\n                onClick={() => handleSelectQuestion(question, index)}\r\n                style={{ maxWidth: \"18rem\" }}>\r\n                <div\r\n                  className='card-body'\r\n                  style={{ cursor: \"pointer\", height: \"60px\" }}>\r\n                  <h6 className='card-title'>{100 * (index + 1)}</h6>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className='col-lg-2 col-sm-4 col-4'>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            <div className='card bg-warning mb-3' style={{ maxWidth: \"18rem\" }}>\r\n              <div className='card-category' style={{ height: \"80px\" }}>\r\n                <h5 className='text-wrap'>\r\n                  {getCategoryTitle(window.atob(category4[0].category))}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            {category4.map((question, index) => (\r\n              <div\r\n                key={question.question}\r\n                id={question.question}\r\n                className='card bg-primary mb-3 '\r\n                onClick={() => handleSelectQuestion(question, index)}\r\n                style={{ maxWidth: \"18rem\" }}>\r\n                <div\r\n                  className='card-body'\r\n                  style={{ cursor: \"pointer\", height: \"60px\" }}>\r\n                  <h6 className='card-title'>{100 * (index + 1)}</h6>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className='col-lg-2 col-sm-4 col-4'>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            <div className='card bg-warning mb-3' style={{ maxWidth: \"18rem\" }}>\r\n              <div className='card-category' style={{ height: \"80px\" }}>\r\n                <h5 className='text-wrap'>\r\n                  {getCategoryTitle(window.atob(category5[0].category))}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            {/* Aqui las pruebas para el card del título */}\r\n            {category5.map((question, index) => (\r\n              <div\r\n                key={question.question}\r\n                id={question.question}\r\n                className='card bg-primary mb-3 '\r\n                onClick={() => handleSelectQuestion(question, index)}\r\n                style={{ maxWidth: \"18rem\" }}>\r\n                <div\r\n                  className='card-body'\r\n                  style={{ cursor: \"pointer\", height: \"60px\" }}>\r\n                  <h6 className='card-title'>{100 * (index + 1)}</h6>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {score.hits + score.errors < 25 && (\r\n          <div className='row justify-content-md-center mb-5'>\r\n            <div className='col-sm-12 col-lg-6'>\r\n              <div className='card'>\r\n                <div className='card-header'>\r\n                  <h4>{name}</h4>\r\n                </div>\r\n                <div className='card-body'>\r\n                  <h2 className='card-text'> Points: {score.points} </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {score.hits + score.errors === 25 && (\r\n          <div className='row justify-content-md-center mb-5'>\r\n            <div className='col-sm-12 col-lg-6'>\r\n              {/* Aqui va el card de ganaste la partida */}\r\n              <div className='card'>\r\n                <div className='card-header'>Thanks for playing!</div>\r\n                <div className='card-body'>\r\n                  <h5 className='card-title'>Results</h5>\r\n                  <p className='card-text'> Correct Anwsers: {score.hits} </p>\r\n                  <p className='card-text'>\r\n                    {\" \"}\r\n                    Incorrect Anwsers: {score.errors}{\" \"}\r\n                  </p>\r\n                  <b>\r\n                    <h4 className='card-text'>\r\n                      {\" \"}\r\n                      Total Points: {score.points}{\" \"}\r\n                    </h4>\r\n                  </b>\r\n\r\n                  <Link to='/jeopardy' className='btn btn-primary mt-5'>\r\n                    Play Again\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <JeopardyModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JeopardyGameScreen;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainScreen = () => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row justify-content-center'>\r\n        <div className=' col-12 col-sm-6 col-lg-4 mt-5'>\r\n          <div className='card'>\r\n            <img\r\n              src='https://firebasestorage.googleapis.com/v0/b/triviaapp-f19ed.appspot.com/o/images%2Ftraditional_trivia.jpg?alt=media&token=32ce5cc2-6351-47eb-a80c-41f7074345a2'\r\n              className='card-img-top'\r\n              alt='image_traditional'\r\n              style={{ maxHeight: \"220px\" }}\r\n            />\r\n            <div className='card-body'>\r\n              <h5 className='card-title'>Traditional Mode</h5>\r\n              <p className='card-text'>\r\n                Answer questions to get the best possible score.\r\n              </p>\r\n              <Link className='btn btn-info' to='/traditional'>\r\n                Play\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=' col-12 col-sm-6 col-lg-4 mt-5'>\r\n          <div className='card'>\r\n            <img\r\n              src='https://firebasestorage.googleapis.com/v0/b/triviaapp-f19ed.appspot.com/o/images%2Fstrikeout.jpg?alt=media&token=39595a6e-1894-46f7-b84c-2fc4387d574f'\r\n              className='card-img-top'\r\n              alt='image_strikeout'\r\n              style={{ maxHeight: \"220px\" }}\r\n            />\r\n            <div className='card-body'>\r\n              <h5 className='card-title'> Strikeout Mode</h5>\r\n              <p className='card-text'>\r\n                Answer all the questions you can until you get 3 mistakes, the\r\n                you're out!\r\n              </p>\r\n              <Link className='btn btn-info' to='/strikeout'>\r\n                Play\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='col-12 col-sm-6 col-lg-4 mt-5'>\r\n          <div className='card'>\r\n            <img\r\n              src='https://firebasestorage.googleapis.com/v0/b/triviaapp-f19ed.appspot.com/o/images%2Fjeopardy.jpg?alt=media&token=e381efe0-ecdd-4eaf-918b-9c36b042b2c7'\r\n              className='card-img-top'\r\n              alt='image_jeopardy'\r\n              style={{ maxHeight: \"220px\" }}\r\n            />\r\n            <div className='card-body'>\r\n              <h5 className='card-title'>Jeopardy Mode</h5>\r\n              <p className='card-text'>\r\n                If you answer correctly you win the points, otherwise you lose\r\n                them, similar to jeopardy.\r\n              </p>\r\n              <Link to='/jeopardy' className='btn btn-info'>\r\n                Play\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isLoggedIn ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  startLoginEmailPassword,\r\n  startGoogleLogin,\r\n  startFacebookLogin,\r\n} from \"../../redux/actions/authActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  console.log(loading);\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n\r\n  const handleFacebookLogin = () => {\r\n    dispatch(startFacebookLogin());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='container'>\r\n        <div className='row justify-content-center mt-5'>\r\n          <div className='col-sm-12 col-lg-4 card'>\r\n            <div className='card-body'>\r\n              <h4>Login</h4>\r\n              <form onSubmit={handleLogin}>\r\n                <div className='input-group-prepend'>\r\n                  <span\r\n                    className='input-group-text'\r\n                    id='basic-addon1'\r\n                    style={{ width: \"120px\" }}>\r\n                    Email\r\n                  </span>\r\n                  <input\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    className='form-control'\r\n                    placeholder='Email'></input>\r\n                </div>\r\n\r\n                <div className='input-group-prepend mt-2'>\r\n                  <span\r\n                    className='input-group-text'\r\n                    id='basic-addon1'\r\n                    style={{ width: \"120px\" }}>\r\n                    Password\r\n                  </span>\r\n                  <input\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                    className='form-control'\r\n                    placeholder='Password'></input>\r\n                </div>\r\n\r\n                <button\r\n                  className='btn btn-primary btn-block mt-2 mb-3'\r\n                  disabled={loading}>\r\n                  {loading ? \"Wait for it...\" : \"Login\"}\r\n                </button>\r\n\r\n                <Link to='/auth/register'>I don´t have an account</Link>\r\n              </form>\r\n            </div>\r\n\r\n            <div className='card mt-5'>\r\n              <div className='card-body'>\r\n                <button\r\n                  className='btn btn-info btn-block mt-2'\r\n                  onClick={handleFacebookLogin}>\r\n                  Login with Facebook\r\n                </button>\r\n                <button\r\n                  className='btn btn-light btn-block mt-2'\r\n                  onClick={handleGoogleLogin}>\r\n                  Login with Google\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport { startRegisterWithEmailAndPassword } from \"../../redux/actions/authActions\";\r\n\r\nconst RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [formValues, handleInputChange] = useForm({\r\n    username: \"\",\r\n    email: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { username, email, password1, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailAndPassword(email, password1, username));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (username.trim().length === 0) {\r\n      setErrorMessage(\"Username is required\");\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      setErrorMessage(\"Email is not valid\");\r\n      return false;\r\n    } else if (password1 !== password2 || password1.length < 6) {\r\n      setErrorMessage(\"Password should match and be 6 characters or longer\");\r\n      return false;\r\n    }\r\n\r\n    setErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='container'>\r\n        <div className='row justify-content-center mt-5'>\r\n          <div className='col-sm-12 col-lg-4 card'>\r\n            <div className='card-body'>\r\n              <h4>Register</h4>\r\n\r\n              <form onSubmit={handleRegister}>\r\n                <div className='input-group-prepend mt-2'>\r\n                  <span\r\n                    className='input-group-text'\r\n                    id='basic-addon1'\r\n                    style={{ width: \"130px\" }}>\r\n                    Username\r\n                  </span>\r\n                  <input\r\n                    type='text'\r\n                    name='username'\r\n                    value={username}\r\n                    onChange={handleInputChange}\r\n                    className='form-control'\r\n                    placeholder='Username'></input>\r\n                </div>\r\n\r\n                <div className='input-group-prepend mt-2'>\r\n                  <span\r\n                    className='input-group-text'\r\n                    id='basic-addon1'\r\n                    style={{ width: \"130px\" }}>\r\n                    Email\r\n                  </span>\r\n                  <input\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    className='form-control'\r\n                    placeholder='Email'></input>\r\n                </div>\r\n\r\n                <div className='input-group-prepend mt-2'>\r\n                  <span\r\n                    className='input-group-text'\r\n                    id='basic-addon1'\r\n                    style={{ width: \"130px\" }}>\r\n                    Password\r\n                  </span>\r\n                  <input\r\n                    type='password'\r\n                    name='password1'\r\n                    value={password1}\r\n                    onChange={handleInputChange}\r\n                    className='form-control'\r\n                    placeholder='Password'></input>\r\n                </div>\r\n\r\n                <div className='input-group-prepend mt-2'>\r\n                  <span\r\n                    className='input-group-text'\r\n                    id='basic-addon1'\r\n                    style={{ width: \"130px\" }}>\r\n                    Confirm\r\n                  </span>\r\n                  <input\r\n                    type='password'\r\n                    name='password2'\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                    className='form-control'\r\n                    placeholder='Confirm Password'></input>\r\n                </div>\r\n\r\n                {errorMessage !== \"\" && (\r\n                  <div className='alert-danger text-white mt-3'>\r\n                    {errorMessage}\r\n                  </div>\r\n                )}\r\n\r\n                {\r\n                  <button className='btn btn-primary btn-block mt-4 mb-3'>\r\n                    Register\r\n                  </button>\r\n                }\r\n\r\n                <Link to='/auth/login'>I already have an account</Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React from \"react\";\r\nimport LoginScreen from \"../components/screens/LoginScreen\";\r\nimport RegisterScreen from \"../components/screens/RegisterScreen\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthRouter = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path='/auth/login' component={LoginScreen} />\r\n        <Route exact path='/auth/register' component={RegisterScreen} />\r\n        <Redirect to='/auth/login' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthRouter;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { startLogout } from \"../redux/actions/authActions\";\r\n\r\nconst Navbar = () => {\r\n  const { name, logged } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-dark bg-primary'>\r\n      <Link className='navbar-brand' to='/'>\r\n        Tri-Trivia\r\n      </Link>\r\n      <button\r\n        className='navbar-toggler'\r\n        type='button'\r\n        data-toggle='collapse'\r\n        data-target='#navbarHiddenContent'\r\n        aria-controls='navbarHiddenContent'\r\n        aria-expanded='true'\r\n        aria-label='Toggle navigation'>\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n\r\n      <div className='collapse navbar-collapse' id='navbarHiddenContent'>\r\n        <ul className='navbar-nav mr-auto align-items-start'>\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              className='nav-link'\r\n              to='/traditional'\r\n              activeClassName='active'>\r\n              Traditional\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              className='nav-link'\r\n              to='/strikeout'\r\n              activeClassName='active'>\r\n              Strikeout\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              className='nav-link'\r\n              to='/jeopardy'\r\n              activeClassName='active'>\r\n              Jeopardy\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              className='nav-link'\r\n              to='/myStats'\r\n              activeClassName='active'>\r\n              My Stats\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              className='nav-link'\r\n              to='/records'\r\n              activeClassName='active'>\r\n              Top Records\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className='form-inline my-2 my-lg-0'>\r\n          {logged ? (\r\n            <div style={{ flexDirection: \"column\" }}>\r\n              <Link\r\n                className='btn btn-block btn-danger'\r\n                to='/'\r\n                onClick={handleLogout}>\r\n                Logout\r\n              </Link>\r\n              <Link to='/myStats' style={{ color: \"#FFF\" }}>\r\n                {name}\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div style={{ flexDirection: \"column\" }}>\r\n              <Link className='btn btn-block btn-success' to='/auth/login'>\r\n                Login\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const sortStats = (stats) => {\r\n  const sortedStats = stats.sort(compare);\r\n\r\n  return sortedStats;\r\n};\r\n\r\nconst compare = (a, b) => {\r\n  // Use toUpperCase() to ignore character casing\r\n  const pointsA = a.points;\r\n  const pointsB = b.points;\r\n\r\n  let comparison = 0;\r\n  if (pointsA > pointsB) {\r\n    comparison = 1;\r\n  } else if (pointsA < pointsB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison * -1;\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst UserTopScoreTable = ({ stats }) => {\r\n  return (\r\n    <>\r\n      <table className='table table-dark'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>Date</th>\r\n            <th scope='col'>Hits</th>\r\n            <th scope='col'>Errors</th>\r\n            <th scope='col'>Points</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {stats.map((game) => {\r\n            return (\r\n              <tr key={game.date}>\r\n                <td>{moment(game.date).fromNow()}</td>\r\n                <td>{game.hits}</td>\r\n                <td>{game.errors}</td>\r\n                <th scope='row'>{game.points}</th>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {stats.length === 0 && (\r\n        <div className='alert alert-dark'>No games played in this category</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserTopScoreTable;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotLogged = () => {\r\n  return (\r\n    <>\r\n      <div className='row justify-content-center mt-5'>\r\n        <div className='col-12 col-sm-6 col-lg-4'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              <h5 className='card-title'>We don't know who you are...</h5>\r\n              <h6 className='card-subtitle mb-2 text-muted'>\r\n                You are not logged in\r\n              </h6>\r\n              <p className='card-text'>\r\n                You can play anonymously as much as you want, but if you want to\r\n                register your scores, we need you to login (please :D)\r\n              </p>\r\n              <Link to='/auth/login' className='btn btn-block btn-success'>\r\n                Login\r\n              </Link>\r\n              <Link to='/' className='btn btn-block btn-primary'>\r\n                Main Menu\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotLogged;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {\r\n  changePhoto,\r\n  changeUsername,\r\n  startLoadUserStats,\r\n} from \"../../redux/actions/authActions\";\r\nimport { sortStats } from \"../helpers/sortedStats\";\r\nimport UserTopScoreTable from \"../UserTopScoreTable\";\r\n// import Loading from \"../Loading\";\r\nimport NotLogged from \"../NotLogged\";\r\nimport { useState } from \"react\";\r\n\r\nconst UserStatsScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { stats, uid, logged, name, photoUrl } = useSelector(\r\n    (state) => state.auth,\r\n  );\r\n  const { loading } = useSelector((state) => state.ui);\r\n  const [file, setFile] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n  const [imageName, setImageName] = useState(\"No image selected\");\r\n  const [showChangeProfile, setShowChangeProfile] = useState(false);\r\n\r\n  const defaultPhotoUrl =\r\n    \"https://firebasestorage.googleapis.com/v0/b/triviaapp-f19ed.appspot.com/o/empty-avatar.jpg?alt=media&token=79479c74-2db5-4a68-9a7e-a72bc02c60fc\";\r\n  useEffect(() => {\r\n    if (uid) {\r\n      dispatch(startLoadUserStats(uid));\r\n    }\r\n  }, [dispatch, uid]);\r\n\r\n  // GET TOP 5 TRADITIONAL\r\n  const traditionalStats = stats.filter(\r\n    (game) => game.gameMode === \"traditional\",\r\n  );\r\n  const sortedTraditionalStats = sortStats(traditionalStats);\r\n  const topTraditionalStats = sortedTraditionalStats.slice(0, 5);\r\n  // GET TOP 5 TRADITIONAL\r\n\r\n  // GET TOP 5 STRIKEOUT\r\n  const strikeoutStats = stats.filter((game) => game.gameMode === \"strikeout\");\r\n  const sortedStrikeoutStats = sortStats(strikeoutStats);\r\n  const topStrikeoutStats = sortedStrikeoutStats.slice(0, 5);\r\n  // GET TOP 5 STRIKEOUT\r\n\r\n  // GET TOP 5 JEOPARDY\r\n  const jeopardyStats = stats.filter((game) => game.gameMode === \"jeopardy\");\r\n  const sortedJeopardyStats = sortStats(jeopardyStats);\r\n  const topJeopardyStats = sortedJeopardyStats.slice(0, 5);\r\n  // GET TOP 5 JEOPARDY\r\n\r\n  const handleInputChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handleChangePicture = () => {\r\n    document.querySelector(\"#inputFile\").click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n      setImageName(e.target.files[0].name);\r\n    }\r\n  };\r\n\r\n  const handleApplyChanges = () => {\r\n    if (username !== null) {\r\n      dispatch(changeUsername(username));\r\n      setUsername(null);\r\n    }\r\n\r\n    if (file !== null) {\r\n      dispatch(changePhoto(file));\r\n      setImageName(\"No image selected\");\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  if (!logged) {\r\n    return <NotLogged />;\r\n  }\r\n\r\n  // if (stats.length === 0) {\r\n  //   return <Loading />;\r\n  // }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <div className='row justify-content-center'>\r\n        <div className='col-12 col-sm-8 col-lg-5'>\r\n          <div className='card p-4'>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ flex: 1 }}>\r\n                <img\r\n                  src={photoUrl !== null ? photoUrl : defaultPhotoUrl}\r\n                  alt='Profile'\r\n                  style={{ width: \"100px\" }}\r\n                />\r\n\r\n                <h4 className='mt-2'>{name} </h4>\r\n                <p\r\n                  onClick={() => setShowChangeProfile(!showChangeProfile)}\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    textDecoration: \"underline\",\r\n                    color: \"#35A00C\",\r\n                    marginTop: \"-5px\",\r\n                    cursor: \"pointer\",\r\n                  }}>\r\n                  {!showChangeProfile ? \"Change profile\" : \"Close Edit Options\"}\r\n                </p>\r\n              </div>\r\n              <div style={{ flex: 1 }}>\r\n                <h5>Total Games Played</h5>\r\n                <table className='table table-sm'>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Traditional:</td>\r\n                      <td>{traditionalStats.length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Strikeout:</td>\r\n                      <td>{strikeoutStats.length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Jeopardy:</td>\r\n                      <td>{jeopardyStats.length}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Aqui pondré las opciones para cambiar de nombre e imagen de perfil */}\r\n\r\n            {showChangeProfile && (\r\n              <div>\r\n                <h5>Change your profile</h5>\r\n\r\n                <div className='input-group mb-3'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    placeholder='Select a username'\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby='basic-addon2'\r\n                    onChange={handleInputChange}\r\n                    defaultValue={name}></input>\r\n                </div>\r\n\r\n                <div className='input-group mb-3'>\r\n                  <button\r\n                    className='btn btn-warning'\r\n                    onClick={handleChangePicture}>\r\n                    Change Profile Picture\r\n                  </button>\r\n\r\n                  <p\r\n                    style={{\r\n                      marginLeft: \"30px\",\r\n                      marginTop: \"15px\",\r\n                      fontSize: \"12px\",\r\n                      color: \"#35A00C\",\r\n                    }}>\r\n                    {imageName}\r\n                  </p>\r\n\r\n                  <input\r\n                    type='file'\r\n                    name='file'\r\n                    id='inputFile'\r\n                    style={{ display: \"none\" }}\r\n                    onChange={handleFileChange}\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  className='btn btn-block btn-primary mt-3'\r\n                  onClick={handleApplyChanges}\r\n                  disabled={loading}>\r\n                  {!loading ? \"Apply Changes\" : \"Wait for it...\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Aqui pondré las opciones para cambiar de nombre e imagen de perfil */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='row mt-5'>\r\n        <div className='col-lg-4'>\r\n          <div>\r\n            <h5>Top 5 Traditional Mode</h5>\r\n          </div>\r\n          <UserTopScoreTable stats={topTraditionalStats} />\r\n        </div>\r\n\r\n        <div className='col-lg-4'>\r\n          <div>\r\n            <h5>Top 5 Strikeout Mode</h5>\r\n          </div>\r\n          <UserTopScoreTable stats={topStrikeoutStats} />\r\n        </div>\r\n\r\n        <div className='col-lg-4'>\r\n          <div>\r\n            <h5>Top 5 Jeopardy Mode</h5>\r\n          </div>\r\n          <UserTopScoreTable stats={topJeopardyStats} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='row justify-content-center mt-5'>\r\n        <div className='col-lg-8 col-sm-12'>\r\n          <div>\r\n            <h5>Recent Games</h5>\r\n          </div>\r\n          <table className='table table-dark'>\r\n            <thead>\r\n              <tr>\r\n                <th scope='col'>Date</th>\r\n                <th scope='col'>Mode</th>\r\n                <th scope='col'>Hits</th>\r\n                <th scope='col'>Errors</th>\r\n                <th scope='col'>Points</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {stats.map((game) => {\r\n                return (\r\n                  <tr key={game.date}>\r\n                    <td>{moment(game.date).fromNow()}</td>\r\n                    <td>{game.gameMode.toUpperCase()}</td>\r\n                    <td>{game.hits}</td>\r\n                    <td>{game.errors}</td>\r\n                    <th scope='row'>{game.points}</th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          {stats.length === 0 && (\r\n            <div className='alert alert-dark'>\r\n              No games played in this category\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserStatsScreen;\r\n","import { db } from \"../../firebase/firebaseConfig\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const loadGeneralStats = () => {\r\n  return async (dispatch) => {\r\n    const traditionalStatsSnap = await db\r\n      .collection(\"traditional-mode\")\r\n      .orderBy(\"points\", \"desc\")\r\n      .get();\r\n\r\n    const strikeoutStatsSnap = await db\r\n      .collection(\"strikeout-mode\")\r\n      .orderBy(\"points\", \"desc\")\r\n      .get();\r\n\r\n    const jeopardyStatsSnap = await db\r\n      .collection(\"jeopardy-mode\")\r\n      .orderBy(\"points\", \"desc\")\r\n      .get();\r\n\r\n    const traditionalStats = [];\r\n    const strikeoutStats = [];\r\n    const jeopardyStats = [];\r\n\r\n    traditionalStatsSnap.forEach((game) => {\r\n      traditionalStats.push(game.data());\r\n    });\r\n\r\n    strikeoutStatsSnap.forEach((game) => {\r\n      strikeoutStats.push(game.data());\r\n    });\r\n\r\n    jeopardyStatsSnap.forEach((game) => {\r\n      jeopardyStats.push(game.data());\r\n    });\r\n\r\n    dispatch(statsSetRecords(traditionalStats, strikeoutStats, jeopardyStats));\r\n  };\r\n};\r\n\r\nconst statsSetRecords = (\r\n  traditionalRecords,\r\n  strikeoutRecords,\r\n  jeopardyRecords,\r\n) => ({\r\n  type: types.statsSetRecords,\r\n  payload: {\r\n    traditionalRecords,\r\n    strikeoutRecords,\r\n    jeopardyRecords,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst RecordsTable = ({ records }) => {\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <table className='table table-striped table-dark'>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col'>Place</th>\r\n          <th scope='col'>User</th>\r\n          <th scope='col'>Date</th>\r\n          <th scope='col'>Points</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {records.map((game, index) => {\r\n          return (\r\n            <tr\r\n              key={game.date}\r\n              className={game.userUid === uid ? \"bg-primary\" : undefined}>\r\n              <td>{index + 1}</td>\r\n              <td>\r\n                <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n                  <img\r\n                    src={game.photoUrl}\r\n                    className='img-thumbnail'\r\n                    alt='profile pic'\r\n                    style={{\r\n                      width: \"30px\",\r\n                      maxHeight: \"30px\",\r\n                      marginRight: \"5px\",\r\n                    }}\r\n                  />\r\n                  {game.username}\r\n                </div>\r\n              </td>\r\n              <td>{moment(game.date).fromNow()}</td>\r\n              <th scope='row'>{game.points} </th>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default RecordsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadGeneralStats } from \"../../redux/actions/statsActions\";\r\nimport RecordsTable from \"../RecordsTable\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst RecordsScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadGeneralStats());\r\n  }, [dispatch]);\r\n\r\n  const { traditional, strikeout, jeopardy } = useSelector(\r\n    (state) => state.stats,\r\n  );\r\n\r\n  const traditionalTop = traditional.slice(0, 10);\r\n  const strikeoutTop = strikeout.slice(0, 10);\r\n  const jeopardyTop = jeopardy.slice(0, 10);\r\n\r\n  if (\r\n    traditionalTop.length === 0 ||\r\n    strikeoutTop.length === 0 ||\r\n    jeopardyTop === 0\r\n  ) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row justify-content-center'>\r\n        <div className='col-12 col-sm-10 col-lg-8 mt-5'>\r\n          <div>\r\n            <h5>Traditional Mode Top 10</h5>\r\n          </div>\r\n          <RecordsTable records={traditionalTop} />\r\n        </div>\r\n\r\n        <div className='col-12 col-sm-10 col-lg-8 mt-5'>\r\n          <div>\r\n            <h5>Strikeout Mode Top 10</h5>\r\n          </div>\r\n          <RecordsTable records={strikeoutTop} />\r\n        </div>\r\n\r\n        <div className='col-12 col-sm-10 col-lg-8 mt-5'>\r\n          <div>\r\n            <h5>Jeopardy Mode Top 10</h5>\r\n          </div>\r\n          <RecordsTable records={jeopardyTop} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordsScreen;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer class='footer-copyright text-center py-3'>\r\n      <hr style={{ backgroundColor: \"white\" }} />© 2020 Copyright:\r\n      <a href='mailto: dassaev86@gmail.com' className='ml-2'>\r\n        {\" \"}\r\n        Dassaev Novela\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { firebase } from \"../firebase/firebaseConfig\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, startLoadUserStats } from \"../redux/actions/authActions\";\r\nimport { useState } from \"react\";\r\nimport TraditionalOptionsScreen from \"../components/screens/TraditionalOptionsScreen\";\r\nimport TraditionalMode from \"../components/screens/TraditionalMode\";\r\nimport StrikeoutScreen from \"../components/screens/StrikeoutScreen\";\r\nimport StrikeoutGameScreen from \"../components/screens/StrikeoutGameScreen\";\r\nimport JeopardyScreen from \"../components/screens/JeopardyScreen\";\r\nimport JeopardyGameScreen from \"../components/screens/JeopardyGameScreen\";\r\nimport MainScreen from \"../components/screens/MainScreen\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport UserStatsScreen from \"../components/screens/UserStatsScreen\";\r\nimport RecordsScreen from \"../components/screens/RecordsScreen\";\r\nimport Loading from \"../components/Loading\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const [checking, setChecking] = useState(true);\r\n  const { logged } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName, user.photoURL));\r\n        dispatch(startLoadUserStats(user.uid));\r\n      }\r\n\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking]);\r\n\r\n  if (checking) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='page-container'>\r\n      <Router>\r\n        <div className='content-wrap'>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/traditional'\r\n              component={TraditionalOptionsScreen}\r\n            />\r\n            <Route exact path='/traditional/game' component={TraditionalMode} />\r\n            <Route exact path='/strikeout' component={StrikeoutScreen} />\r\n            <Route\r\n              exact\r\n              path='/strikeout/game'\r\n              component={StrikeoutGameScreen}\r\n            />\r\n            <Route exact path='/jeopardy' component={JeopardyScreen} />\r\n            <Route exact path='/jeopardy/game' component={JeopardyGameScreen} />\r\n            <Route exact path='/myStats' component={UserStatsScreen} />\r\n            <Route exact path='/records' component={RecordsScreen} />\r\n            <PublicRoute\r\n              path='/auth'\r\n              component={AuthRouter}\r\n              isLoggedIn={logged}\r\n            />\r\n\r\n            <Route exact path='/' component={MainScreen} />\r\n\r\n            <Redirect to='/' />\r\n\r\n            <Redirect to='auth/login' />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  user: \"Dassaev\",\r\n  hits: 0,\r\n  errors: 0,\r\n  points: 0,\r\n  category: \"\",\r\n  difficulty: \"medium\",\r\n  amount: \"10\",\r\n  mode: \"\",\r\n  active: false,\r\n};\r\n\r\nexport const gameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.gameSelectedOptions:\r\n      return {\r\n        ...state,\r\n        category: action.payload.category,\r\n        difficulty: action.payload.difficulty,\r\n        amount: action.payload.amount,\r\n        mode: action.payload.mode,\r\n        active: action.payload.active,\r\n      };\r\n\r\n    case types.gameSaveResults:\r\n      return {\r\n        ...state,\r\n        hits: action.payload.hits,\r\n        errors: action.payload.errors,\r\n        points: action.payload.points,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n  loading: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true,\r\n      };\r\n\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const { types } = require(\"../types/types\");\r\n\r\nconst initialState = {\r\n  trivia: {},\r\n  idx: 0,\r\n  score: {\r\n    hits: 0,\r\n    errors: 0,\r\n    points: 0,\r\n  },\r\n  categories: [],\r\n  active: false,\r\n};\r\n\r\nexport const jeopardyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.jeopardySetTrivia:\r\n      return {\r\n        ...state,\r\n        trivia: {\r\n          ...action.payload.trivia,\r\n        },\r\n        idx: action.payload.idx,\r\n      };\r\n\r\n    case types.jeopardySetScore:\r\n      return {\r\n        ...state,\r\n        score: action.payload.score,\r\n      };\r\n\r\n    case types.jeopardySetRandomCategories:\r\n      return {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n      };\r\n\r\n    case types.jeopardySetActive:\r\n      return {\r\n        ...state,\r\n        active: action.payload.active,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  uid: \"\",\r\n  name: \"\",\r\n  photoUrl: \"\",\r\n  logged: false,\r\n  stats: [],\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n        photoUrl: action.payload.photoUrl,\r\n        logged: true,\r\n      };\r\n\r\n    case types.authLoadUserStats:\r\n      return {\r\n        ...state,\r\n        stats: action.payload.userStats,\r\n      };\r\n\r\n    case types.authUpdateProfile:\r\n      return {\r\n        ...state,\r\n        name: action.payload.username,\r\n      };\r\n\r\n    case types.authUpdateProfilePicture:\r\n      return {\r\n        ...state,\r\n        photoUrl: action.payload.photoURL,\r\n      };\r\n\r\n    case types.authLogout:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  traditional: [],\r\n  strikeout: [],\r\n  jeopardy: [],\r\n};\r\n\r\nexport const statsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.statsSetRecords:\r\n      return {\r\n        ...state,\r\n        traditional: action.payload.traditionalRecords,\r\n        strikeout: action.payload.strikeoutRecords,\r\n        jeopardy: action.payload.jeopardyRecords,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { gameReducer } from \"./gameReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { jeopardyReducer } from \"./jeopardyReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { statsReducer } from \"./statsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  game: gameReducer,\r\n  ui: uiReducer,\r\n  jeopardy: jeopardyReducer,\r\n  auth: authReducer,\r\n  stats: statsReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./routers/AppRouter\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <AppRouter />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","export const types = {\r\n  gameSelectedOptions: \"[Game] Selected Options\",\r\n  gameSaveResults: \"[Game] Save Results\",\r\n\r\n  uiOpenModal: \"[UI] Open Modal\",\r\n  uiCloseModal: \"[UI] Close Modal\",\r\n  uiStartLoading: \"[UI] Start Loading\",\r\n  uiFinishLoading: \"[UI] Finish Loading\",\r\n\r\n  jeopardySetTrivia: \"[Jeopardy] Set Trivia\",\r\n  jeopardySetScore: \"[Jeopardy] Set Score\",\r\n  jeopardySetActive: \"[Jeopardy] Set Active\",\r\n  jeopardySetRandomCategories: \"[Jeopardy] Set Random Categories\",\r\n\r\n  authLogin: \"[Auth] Login\",\r\n  authLogout: \"[Auth] Logout\",\r\n  authLoadUserStats: \"[Auth] Load User Stats\",\r\n  authUpdateProfile: \"[Auth] Update Profile\",\r\n  authUpdateProfilePicture: \"[Auth] Update Profile Picture\",\r\n\r\n  statsSetRecords: \"[Stats] Set Records\",\r\n};\r\n"],"sourceRoot":""}